---
format: html
embed-resources: true
toc: true
toc-depth: 3
execute: 
  eval: true
  echo: false
  error: false
  warning: false
---

```{r}
#| label: load project
proj_dir <- here::here()
```

```{r}
#| label: run scripts

# prepare data
source(fs::path(proj_dir, "R", "01_prepare_data.R"))

# run ad hoc analyses
source(fs::path(proj_dir, "rf_analyze_pilot_paradata.R"))
```

```{r}
rf_theme <- reactable::reactableTheme(
  headerStyle = list(
    background = "#0b2d68",
    color = "white"
  ),
  stripedColor = "#e3f7ff",
)
```

## Module duration

### Overall

```{r}
#| label: section duration overall

reactable::reactable(
  data = duration_by_module,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  searchable = TRUE,
  striped = TRUE,
  theme = rf_theme
)

```

### Per person

```{r}
#| label: section duration by person

reactable::reactable(
  data = duration_by_person_module,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)
```

### Per item

```{r}
#| label: section duration by item

reactable::reactable(
  data = duration_by_item,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)

```

### Question duration

```{r}
#| label: question duration

duration_by_question_filterable <- crosstalk::SharedData$new(duration_by_question)

crosstalk::bscols(
  widths = c(3, 9),
  list(
    crosstalk::filter_slider("n_obs", "Obs per question", duration_by_question_filterable, ~ n_obs, step = 1),
    crosstalk::filter_select("section", "Section", duration_by_question_filterable, ~ section, multiple = TRUE)
  ),
  reactable::reactable(
    data = duration_by_question_filterable,
    defaultColDef = reactable::colDef(
      maxWidth = 100,
      format = reactable::colFormat(
        digits = 2
      )
    ),
    columns = list(
      section = reactable::colDef(
        show = FALSE
      ),
      n_obs = reactable::colDef(
        format = reactable::colFormat(separators = TRUE)
      )
    ),
    fullWidth = FALSE,
    striped = TRUE,
    theme = rf_theme
  )
)

```

### Focus on longer modules

#### Education

```{r}
#| label: education
 
reactable::reactable(
  data = duration_for_educ,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)

```

#### Labor

```{r}
#| label: labor

reactable::reactable(
  data = duration_for_labor,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)


```

#### Shocks

```{r}
#| label: shocks

reactable::reactable(
  data = duration_for_shocks,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)

```

### Pauses

Because pauses are relatively infrequent events, the table below computes the number of answer changes as a simple tally over all pilot observations.

```{r}
#| label: pauses

reactable::reactable(
  data = pauses_by_section_count,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      header = "N. events",
      format = reactable::colFormat(separators = TRUE)
    ),
    n_pauses = reactable::colDef(
      header = "N. pauses",
      format = reactable::colFormat(separators = TRUE)
    ),
    pct_pauses = reactable::colDef(
      header = "% events pauses",
      format = reactable::colFormat(percent = TRUE, digits = 2)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)

```

### Answer changes

#### By section

```{r}
#| label: answer changes by section

reactable::reactable(
  data = answer_changes_by_section,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    section = reactable::colDef(
      width = 250
    ),
    n_obs = reactable::colDef(
      format = reactable::colFormat(separators = TRUE)
    )
  ),
  fullWidth = FALSE,
  striped = TRUE,
  theme = rf_theme
)

```

#### By question

Because answer changes are a relatively rare event, this table tries to identify questions with a relatively large number of answer changes by computing a simply tally of answer changes across all pilot observations.

```{r}
#| label: answer changes by question

reactable::reactable(
  data = answer_changes_by_question,
  defaultColDef = reactable::colDef(
    maxWidth = 100,
    format = reactable::colFormat(
      digits = 2
    )
  ),
  columns = list(
    variable = reactable::colDef(
      width = 100
    ),
    n_obs = reactable::colDef(
      header = "N. events",
      format = reactable::colFormat(separators = TRUE)
    ),
    n_answer_changes = reactable::colDef(
      header = "N. answer changes",
      format = reactable::colFormat(separators = TRUE)
    ),
    pct_answer_changed = reactable::colDef(
      header = "% events are answer changes",
      format = reactable::colFormat(percent = TRUE, digits = 2)
    )
  ),
  striped = TRUE,
  theme = rf_theme
)

```
